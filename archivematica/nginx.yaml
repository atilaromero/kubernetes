apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: archivematica
data:
  archivematica.conf: |
    server {
      listen 80; 
      client_max_body_size 256M;
      server_name _;
      location / { 
        set $upstream_endpoint http://$(DASHBOARD_SERVICE_HOST):$(DASHBOARD_SERVICE_PORT);
    
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_buffering off;
        proxy_read_timeout 172800s;
        proxy_pass $upstream_endpoint;
      }
    }
    server {
      listen 8000;
      client_max_body_size 256M;
      server_name _;
      location / { 
        set $upstream_endpoint http://$(STORAGE_SERVICE_HOST):$(STORAGE_SERVICE_PORT);
    
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_buffering off;
        proxy_read_timeout 172800s;
        proxy_pass $upstream_endpoint;
      }
    }
  default.conf: |
    #
    # Intentionally left blank to overide default 'default' config.
    # Archivematica services are defined in archivematica.conf instead.
    #
  nginx.conf: |
    user nginx;
    worker_processes  1;  
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    events {
      worker_connections  1024;
    }
    http {
      include /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
          '$status $body_bytes_sent "$http_referer" '
          '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      sendfile on; 
      keepalive_timeout 65; 
      resolver 127.0.0.1;
      include /etc/nginx/conf.d/*.conf;
    }
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/atila.alr/go/bin/kompose convert -f docker-compose.yml
    kompose.version: 1.15.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: nginx
    spec:
      containers:
      - image: nginx:stable-alpine
        name: nginx
        command: ["cat", "/etc/nginx/conf.d/archivematica.conf"]
        ports:
        - containerPort: 80
        - containerPort: 8000
        resources: {}
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: nginx
          subPath: nginx.conf
          readOnly: true
        - mountPath: /etc/nginx/conf.d/archivematica.conf
          name: nginx
          subPath: archivematica.conf
          readOnly: true
        - mountPath: /etc/nginx/conf.d/default.conf
          name: nginx
          subPath: default.conf
          readOnly: true
      restartPolicy: Always
      volumes:
      - name: nginx
        configMap:
          name: nginx
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: /home/atila.alr/go/bin/kompose convert -f docker-compose.yml
    kompose.version: 1.15.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: nginx
  name: nginx
spec:
  ports:
  - name: dashboard
    port: 80
    targetPort: 80
  - name: storage
    port: 8000
    targetPort: 8000
  selector:
    io.kompose.service: nginx
status:
  loadBalancer: {}
---
