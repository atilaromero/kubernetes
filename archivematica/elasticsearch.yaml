apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch-data
  name: elasticsearch-data
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: /home/atila.alr/go/bin/kompose convert -f docker-compose.yml
    kompose.version: 1.15.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.service: elasticsearch
    spec:
      containers:
      - args:
        - elasticsearch
        - -Des.node.name=TestNode
        - -Des.network.host=0.0.0.0
        image: elasticsearch:1.7-alpine
        name: elasticsearch
        ports:
        - containerPort: 9200
        resources: {}
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: elasticsearch-data
      restartPolicy: Always
      volumes:
      - name: elasticsearch-data
        persistentVolumeClaim:
          claimName: elasticsearch-data
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: /home/atila.alr/go/bin/kompose convert -f docker-compose.yml
    kompose.version: 1.15.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  ports:
  - name: default
    port: 9200
    targetPort: 9200
  selector:
    io.kompose.service: elasticsearch
status:
  loadBalancer: {}
---
